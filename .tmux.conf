# $Id: t-williams.conf,v 1.1 2009-11-02 18:59:28 nicm Exp $
#
# ~/.tmux.conf - tmux terminal multiplexer config
# Thayer Williams (http://cinderwick.ca)
# "Feel free to do whatever you like with it."

# I typically start tmux from ~/.xinitrc with the following:
#
#   urxvt -e bash -c "tmux attach -d -t mysession" &
#
# and recall it any time thereafter with xbindkeys (Mod4+s):
#
#   "urxvt -e bash -c 'tmux attach -d -t mysession'"
#     m:0x50 + c:39


# set prefix key to ctrl+a until I have time to adapt
#unbind C-b
set -g prefix C-j		

# send the prefix to client inside window (ala nested sessions)
#bind-key a send-prefix

# toggle last window like screen
bind-key C-a last-window


# toggle statusbar
bind-key b set-option status

###
### the numbering for sessions, windows and panes starts at zero 
### unless we have specified a base-index of 1
set -g base-index 0

#bind r source-file '~/.tmux.conf' \; display-message "config reloaded..."
#bind r source-file '/home/shaobo/.tmux.conf' \; display-message "config reloaded..."
bind r source-file ~/.tmux.conf \; display "Reloaded!"

# ctrl+left/right cycles thru windows
#bind-key -n C-right next
#bind-key -n C-left prev

# open a man page in new window
bind / command-prompt "split-window 'exec man %%'"

# quick view of processes
bind '~' split-window "exec htop"

# scrollback buffer n lines
set -g history-limit 5000

# listen for activity on all windows
set -g bell-action any

# on-screen time for display-panes in ms
set -g display-panes-time 2000

# start window indexing at one instead of zero
set -g base-index 1

# enable wm window titles
set -g set-titles on

# wm window title string (uses statusbar variables)
set -g set-titles-string "tmux.#I.#W"

# session initialization
#new -s mysession mutt
#neww -t 2
#neww -d -t 3
#neww -d -t 5 mocp
#neww -d -t 6 rtorrent
#selectw -t 1

### vi related setting
# split windows like vim
# vim's definition of a horizontal/vertical split is reversed from tmux's
#bind s split-window -v
#bind v split-window -h

bind | split-window -h

## note the following binding will conflict with
## bind-key -r - resize-pane -D 1
## just enable one of them
unbind -
bind - split-window -v


# bind : to command-prompt like vim
# this is the default in tmux already
#bind : command-prompt

# vi-style controls for copy mode
set-window-option -g mode-keys vi

#setw -g xterm-keys on

###enable mouse scroll
set-window-option -g mode-mouse on

### copy content by using shift + mouse key
set-option -g mouse-select-pane on
set-option -g mouse-select-window on

### enable using mouse to resize the panel
set-option -g mouse-resize-pane on 
#set-option -g mouse-resize-pane off 

### use F11/F12 to cycle through windows
bind-key -n F11 previous-window
bind-key -n F12 next-window

## Alt + n/p, cycle through windows
### note -n indicates no prefix
#unbind p
#unbind n
#bind-key  -n M-p prev
#bind-key  -n M-n next
unbind M-p 
unbind M-n 

# move around panes with hjkl, as one would in vim after pressing ctrl-w
unbind h
unbind j
unbind k
unbind l
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R
bind-key -n F10 select-pane -t :.+

### jump between panes by Alt-[arrow]
bind-key -n M-Left   select-pane -L
bind-key -n M-Right  select-pane -R
bind-key -n M-Up     select-pane -U
bind-key -n M-Down   select-pane -D

################################################################################
### resize pane size by Alt-[hljk]
### conflict with vi setting, so we 
### disable it
#bind-key  -n M-h resize-pane -L 1
#bind-key  -n M-l resize-pane -R 1
#bind-key  -n M-j resize-pane -U 1
#bind-key  -n M-k resize-pane -D 1

# resize panes like vim  without prefix C-a
# cannot type mapped symbol
#  if we directory bind  without prefix
#bind-key -n < resize-pane -L 1
#bind-key -n > resize-pane -R 1
#bind-key -n - resize-pane -D 1
#bind-key -n + resize-pane -U 1

# resize panes like vim 
# feel free to change the "1" to however many lines you want to resize by, only
# -r means repeat time
# one at a time can be slow
bind -r < resize-pane -L 1
bind -r > resize-pane -R 1
bind -r _ resize-pane -D 1
bind -r + resize-pane -U 1


bind-key -n M-< resize-pane -L 5
bind-key -n M-> resize-pane -R 5
bind-key -n M-_ resize-pane -D 5
bind-key -n M-+ resize-pane -U 5

### C-a: break-pane(breakp)
### bring pane into a new window

### or bring it back by 
### C-a: join-pane(joinp)

### toggle/zoom between pane/window
## this feature has been supported natively by tmux
#unbind z
#bind z run "tmux-zoom.sh"


### enable vi mode in the comand line, 
### by press "ESC"


#####################################################################################
unbind '"'
bind '"' choose-window

###rename a window
# title A
unbind A
bind A command-prompt "rename-window %%"

# confirm before killing a window or the server
unbind '\'
bind '\' confirm-before "kill-server"

##kill the current pane
## default binding C-a x
### or C-d
unbind x
##bind X confirm kill-pane

### k is used by moving cursor around
### slay
unbind s
unbind S
bind s confirm-before "kill-pane"
bind S confirm-before "kill-window"

#bind k confirm kill-window
#bind K confirm kill-server



#set-option -g bell-action any
#set-option -g visual-action off 

##========================================================================
### copy and paste between tmux and windows

### The only way to copy information from the putty window to the 
### Windows clipboard with a keyboard shortcut is to use the app 
### system menu "copy all to clipboard" (which you can invoke 
### from alt-space, provided you set the "Window > Behavior > 
### System menu appears on ALT-Space" option configured in putty.

### Pasting from the Windows clipboard into putty 
### can be done with Shift-Insert.

#### double-click to select a word/copy a word
### double-click left key of the mouse while pressing Shift key at the same time 
### paste, click right key of the mouse while pressing Shift key down
##========================================================================

# utf8 ability
### set-window-option alias setw
set-window-option -g utf8 on
## or setw -g utf8 on

### set-option alias set
set-option -g mouse-utf8 on
set-option -g status-utf8 on


#unbind [
#bind Escape copy-mode
#unbind p
#bind p paste-buffer

bind -t vi-copy 'v' begin-selection
bind -t vi-copy 'y' copy-selection
bind y run-shell "tmux show-buffer | xclip -selection clipboard -i" \; display-message "Copied tmux buffer to system clipboard"

### set scroll back limit to 102400 lines
set-option -g history-limit 102400

### 256 color support
#set -g default-terminal "screen-256color"
#set -g default-terminal "xterm-256color"

##========================================================================
# statusbar --------------------------------------------------------------

set -g display-time 2000

# default statusbar colors
set -g status-fg white
#set -g status-bg default
set -g status-bg blue 
set -g status-attr default
set -g status-left '#[fg=green]'

# default window title colors
#set-window-option -g window-status-fg cyan
#set-window-option -g window-status-fg white 
#set-window-option -g window-status-bg default
#set-window-option -g window-status-bg blue 
#set-window-option -g window-status-attr dim

# active window title colors
set-window-option -g window-status-current-fg white
set-window-option -g window-status-current-bg default
#set-window-option -g window-status-current-bg white 
set-window-option -g window-status-current-attr bright

# command/message line colors
set -g message-fg white
set -g message-bg black
set -g message-attr bright

# center align the window list
#set -g status-justify centre
set -g status-justify left 

set -g status-right-length 200
set -g status-right "#T#[default]"

# show some useful stats but only when tmux is started 
# outside of Xorg, otherwise dwm statusbar shows these already
#set -g status-right ""
#set -g status-left ""
#if '[ -z "$DISPLAY" ]' 'set -g status-left "[#[fg=green] #H #[default]]"'
#if '[ -z "$DISPLAY" ]' 'set -g status-right "[ #[fg=magenta]#(cat /proc/loadavg | cut -d \" \" -f 1,2,3)#[default] ][ #[fg=cyan,bright]%a %Y-%m-%d %H:%M #[default]]"'
#if '[ -z "$DISPLAY" ]' 'set -g status-right-length 50'

### show global options
### tmux show-option -g
### tmux show-option -s
